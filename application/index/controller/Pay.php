<?php
namespace app\index\controller;
use addons\wechat\library\Config as ConfigService;
use app\common\controller\Frontend;
use EasyWeChat\Foundation\Application;
use EasyWeChat\Payment\Order;
use think\Config;
use think\Db;
use think\Session;

class Pay extends Frontend{

    protected $noNeedLogin = '*';
    protected $noNeedRight = '*';
    protected $layout = '';

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

    }
    public function payment(){
       if(request()->isPost()){
           $param = $this->request->except('s');

           if(empty($param['id'])){//新订单
               $user = $this->getUserInfo();
//               dump( $user['id']);exit;
               $param['member_id'] = $user['id'];
               $param['order_num'] = date('Ymd',time()).time();
               $param['createtime'] = time();

               $order_id = Db::name('recharge_list')->insertGetId($param);
           }else{//已下单未付款
               $order_id = $param['id'];
           }

           if(!$order_id) return $this->return_msg('400','缺少参数');

           $info = Db::name('recharge_list')
//               ->alias('o')
//               ->join('task t','t.id = o.task_id')
               ->where('id',$order_id)
               ->find();
           $attributes = [
               'trade_type'       => 'JSAPI', // JSAPI，NATIVE，APP...
               'body'             => '充值'.$info['money'],
               'detail'           => '充值'.$info['money'],
               'out_trade_no'     => $info['order_num'],
               'total_fee'        => $info['money'] * 100, // 单位：分
               'notify_url'       => 'http://wx.glcgpt.com/addons/wechat/index/notify', // 支付结果通知网址，如果不设置则会使用配置里的默认地址
               'openid'        => Session::get('wechat_user')['original']['openid'], // 如果传入sub_openid, 请在实例化Application时, 同时传入$sub_app_id, $sub_merchant_id
           ];

           $config = $this->prePay($attributes);

           if($config) return $this->return_msg('200','success',$config);
       }
    }

    public function prePay($attributes){
        $app = new Application(ConfigService::load());

        $payment = $app->payment;
        $order = new Order($attributes);

        $result = $payment->prepare($order);
        if ($result->return_code == 'SUCCESS' && $result->result_code == 'SUCCESS'){
            $prepayId = $result->prepay_id;
            $json = $payment->configForPayment($prepayId);
            return $json;
        }else if($result->err_code_des == '该订单已支付' && $result->err_code == 'ORDERPAID'){

            $this->error('该订单已支付');
        }
    }

    public function order(){
        if(request()->isPost()){
            $param = $this->request->except('s');
//            dump($param);
            $user = $this->getUserInfo();
            if($user['money'] >= $param['price']){

                $where = [
                    'id' => $user['id'],
                    'money' => $user['money'] - $param['price']
                ];

                try{
                    $user_money = Db::name('member')->update($where);
                }catch (\Exception $e){
                    return $this->return_msg('400','update money error');
                }
               if($param['num'] > 1){//买断
                   $info = Db::name('task')->where('id',$param['task_id'])->field('already_num,task_num')->find();
                   $num = $info['task_num'] - $info['already_num'];

                       $where = [
                           'id' => $param['task_id'],
                           'already_num' => $info['already_num'] +$num,
                           'activity_status' => 1
                       ];

                       $data = Db::name('task')->update($where);

               }else{
                   $this->SaveTask($param['task_id']);//更新任务表库存
               }
                $param['order_num'] = date('Ymd',time()).time();
                $param['createtime'] = time();
                $param['member_id'] = $user['id'];
                $param['status'] = 1;
                $order = Db::name('order')->insert($param);

                if($order) return $this->return_msg('200','付款成功','','/index/index/show/id/'.$param['task_id']);
            }
            return $this->return_msg('300','余额不足，正在跳转充值页面！','','/index/member/chongzhi');

        }
    }
}