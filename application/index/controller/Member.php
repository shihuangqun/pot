<?php
namespace app\index\controller;

use app\common\controller\Frontend;
use think\Db;

class Member extends Frontend{

    protected $noNeedLogin = '*';
    protected $noNeedRight = '*';
    protected $layout = '';

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    public function index(){
		
	
        $info = $this->getUserInfo();
        $chongzhi = Db::name('recharge')->order('money asc')->select();
        $this->assign([
            'info' => $info,
            'chongzhi' => $chongzhi
        ]);
        return $this->fetch();
    }

    public function chongzhi(){
//        dump($_SERVER);
        $chongzhi = Db::name('recharge')->order('money asc')->select();

        if(request()->isPost()){
            $param = input('price');
            $arr = [];
            foreach($chongzhi as $k => $v){
                if($param >=$v['money']){
                    $arr[] = $v['give'];
                }
            }
            $max = max($arr);
            $money = $param+$max;//充值金额

            $user = $this->getUserInfo();
            $where = [
                'id' => $user['id'],
                'money' => $user['money'] + $money
            ];
            try{
                $data = Db::name('member')->update($where);
            }catch (\Exception $e){
                return $this->return_msg('400','系统繁忙，请稍后再试！');
            }

            if($data) return $this->return_msg('200','充值成功','',$_SERVER['REQUEST_URI']);

        }
        $this->assign([
            'chongzhi' => $chongzhi
        ]);
        return $this->fetch();
    }

    public function order(){

        $user = $this->getUserInfo();

        $no = Db::name('order')
            ->alias('o')
            ->join('task t','t.id = o.task_id')
            ->join('category c','c.id = t.category_id')
            ->where('o.member_id',$user['id'])
            ->where('o.status','0')
            ->field('o.*,c.name as category_name,t.name,t.phone,t.id as tid')
            ->select();

        $yes = Db::name('order')
            ->alias('o')
            ->join('task t','t.id = o.task_id')
            ->join('category c','c.id = t.category_id')
            ->where('o.member_id',$user['id'])
            ->where('o.status','1')
            ->field('o.*,c.name as category_name,t.name,t.phone')
            ->select();
//        dump($yes);

        $this->assign([
            'no' => $no,
            'yes' => $yes
        ]);
        return $this->fetch();
    }
    public function orderInfo(){
        $id = input('id');
        $info = Db::name('order')
            ->alias('o')
            ->join('task t','t.id = o.task_id')
            ->join('category c','c.id = t.category_id')
            ->field('c.name as category_name,t.*,o.num as buynum')
            ->find();
        $this->assign([
            'info' => $info
        ]);
        return $this->fetch();
    }

    public function setting(){

        $city = Db::name('city')->select();
        $user = $this->getUserInfo();
        $str = explode(',',$user['notice_city']);
//        dump($str);
        $this->assign([
            'city' => $city,
            'str' => $str
        ]);
        return $this->fetch();
    }

    //更新用户通知地区
    public function userCity(){
        $user = $this->getUserInfo();

        if(request()->isPost()){
            $param['notice_city'] = rtrim(input('id'),',');
            $param['id'] = $user['id'];

            try{
                Db::name('member')->update($param);
            }catch (\Exception $e){
                return $this->return_msg('400','update city error');
            }
        }
    }
    //通知开关
    public function noticeStatus(){
        $user = $this->getUserInfo();

        if(request()->isPost()){
            $param['notice_status'] = input('status');
            $param['id'] = $user['id'];

            try{
                Db::name('member')->update($param);
            }catch (\Exception $e){
                return $this->return_msg('400','update notice_status error');
            }
        }
    }
}